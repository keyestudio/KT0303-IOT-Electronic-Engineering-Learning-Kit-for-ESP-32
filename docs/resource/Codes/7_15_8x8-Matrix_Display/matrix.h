#pragma once
#include "Arduino.h"



struct MatrixPins {
  int ROW[8];     //存储点阵行引脚
  int COLUMN[8];  //存储点阵列引脚
};

class matrix {
public:
  // 构造函数，接收配置结构体
  matrix(const MatrixPins& Pins)
    : _Pins(Pins) {
    for (int i = 0; i < 8; i++) {
      pinMode(_Pins.ROW[i], OUTPUT);
      pinMode(_Pins.COLUMN[i], OUTPUT);
    }
  }
  //清除显示函数
  void Clear() {
    for (int i = 0; i < 8; i++) {
      digitalWrite(_Pins.ROW[i], LOW);
      digitalWrite(_Pins.COLUMN[i], HIGH);
    }
  }
  //显示函数
  void Display(unsigned char dat[8][8]) {
    for (int c = 0; c < 8; c++) {
      digitalWrite(_Pins.COLUMN[c], LOW);
      for (int r = 0; r < 8; r++) {
        digitalWrite(_Pins.ROW[r], dat[r][c]);
      }
      delay(1);
      Clear();
    }
  }

  void DisplayNum(int num) {
    switch (num) {
      case 0:
        for (int i = 1; i <= 100; i++) {
          Display(data_0);
        }
        break;
      case 1:
        for (int i = 1; i <= 100; i++) {
          Display(data_1);
        }
        break;
      case 2:
        for (int i = 1; i <= 100; i++) {
          Display(data_2);
        }
        break;
      case 3:
        for (int i = 1; i <= 100; i++) {
          Display(data_3);
        }
        break;
      case 4:
        for (int i = 1; i <= 100; i++) {
          Display(data_4);
        }
        break;
      case 5:
        for (int i = 1; i <= 100; i++) {
          Display(data_5);
        }
        break;
      case 6:
        for (int i = 1; i <= 100; i++) {
          Display(data_6);
        }
        break;
      case 7:
        for (int i = 1; i <= 100; i++) {
          Display(data_7);
        }
        break;
      case 8:
        for (int i = 1; i <= 100; i++) {
          Display(data_8);
        }
        break;
      case 9:
        for (int i = 1; i <= 100; i++) {
          Display(data_9);
        }
        break;
    }
  }
  void DisplayImage(String name) {
    if (name == "heart") {
      for (int i = 1; i <= 100; i++) {
        Display(heart);
      }
    }else if(name == "smile"){
      for(int i = 1; i <= 100; i++){
        Display(smile);
      }
    }else if(name == "cry"){
      for(int i = 1; i <= 100; i++){
        Display(cry);
      }
    }
  }

private:
  MatrixPins _Pins;  //存储配置
  unsigned char data_0[8][8] = {
    { 0, 0, 0, 0, 0, 0, 0, 0 },
    { 0, 0, 0, 1, 1, 0, 0, 0 },
    { 0, 0, 1, 0, 0, 1, 0, 0 },
    { 0, 0, 1, 0, 0, 1, 0, 0 },
    { 0, 0, 1, 0, 0, 1, 0, 0 },
    { 0, 0, 1, 0, 0, 1, 0, 0 },
    { 0, 0, 0, 1, 1, 0, 0, 0 },
    { 0, 0, 0, 0, 0, 0, 0, 0 }
  };

  unsigned char data_1[8][8] = {
    { 0, 0, 0, 0, 0, 0, 0, 0 },
    { 0, 0, 0, 0, 1, 0, 0, 0 },
    { 0, 0, 0, 1, 1, 0, 0, 0 },
    { 0, 0, 0, 0, 1, 0, 0, 0 },
    { 0, 0, 0, 0, 1, 0, 0, 0 },
    { 0, 0, 0, 0, 1, 0, 0, 0 },
    { 0, 0, 0, 1, 1, 1, 0, 0 },
    { 0, 0, 0, 0, 0, 0, 0, 0 }
  };

  unsigned char data_2[8][8] = {
    { 0, 0, 0, 0, 0, 0, 0, 0 },
    { 0, 0, 0, 1, 1, 1, 0, 0 },
    { 0, 0, 1, 0, 0, 0, 1, 0 },
    { 0, 0, 0, 0, 0, 1, 0, 0 },
    { 0, 0, 0, 0, 1, 0, 0, 0 },
    { 0, 0, 0, 1, 0, 0, 0, 0 },
    { 0, 0, 1, 1, 1, 1, 1, 0 },
    { 0, 0, 0, 0, 0, 0, 0, 0 }
  };

  unsigned char data_3[8][8] = {
    { 0, 0, 0, 0, 0, 0, 0, 0 },
    { 0, 0, 1, 1, 1, 1, 0, 0 },
    { 0, 0, 0, 0, 0, 1, 0, 0 },
    { 0, 0, 0, 0, 0, 1, 0, 0 },
    { 0, 0, 1, 1, 1, 1, 0, 0 },
    { 0, 0, 0, 0, 0, 1, 0, 0 },
    { 0, 0, 0, 0, 0, 1, 0, 0 },
    { 0, 0, 1, 1, 1, 1, 0, 0 }
  };

  unsigned char data_4[8][8] = {
    { 0, 0, 0, 0, 0, 0, 0, 0 },
    { 0, 0, 1, 0, 1, 0, 0, 0 },
    { 0, 0, 1, 0, 1, 0, 0, 0 },
    { 0, 0, 1, 0, 1, 0, 0, 0 },
    { 0, 0, 1, 1, 1, 1, 0, 0 },
    { 0, 0, 0, 0, 1, 0, 0, 0 },
    { 0, 0, 0, 0, 1, 0, 0, 0 },
    { 0, 0, 0, 0, 0, 0, 0, 0 }
  };

  unsigned char data_5[8][8] = {
    { 0, 0, 0, 0, 0, 0, 0, 0 },
    { 0, 0, 1, 1, 1, 1, 0, 0 },
    { 0, 0, 1, 0, 0, 0, 0, 0 },
    { 0, 0, 1, 1, 1, 1, 0, 0 },
    { 0, 0, 0, 0, 0, 1, 0, 0 },
    { 0, 0, 0, 0, 0, 1, 0, 0 },
    { 0, 0, 1, 1, 1, 1, 0, 0 },
    { 0, 0, 0, 0, 0, 0, 0, 0 }
  };

  unsigned char data_6[8][8] = {
    { 0, 0, 0, 0, 0, 0, 0, 0 },
    { 0, 0, 1, 1, 1, 1, 0, 0 },
    { 0, 0, 1, 0, 0, 0, 0, 0 },
    { 0, 0, 1, 1, 1, 1, 0, 0 },
    { 0, 0, 1, 0, 0, 1, 0, 0 },
    { 0, 0, 1, 0, 0, 1, 0, 0 },
    { 0, 0, 1, 1, 1, 1, 0, 0 },
    { 0, 0, 0, 0, 0, 0, 0, 0 }
  };

  unsigned char data_7[8][8] = {
    { 0, 0, 0, 0, 0, 0, 0, 0 },
    { 0, 0, 1, 1, 1, 1, 0, 0 },
    { 0, 0, 0, 0, 0, 1, 0, 0 },
    { 0, 0, 0, 0, 0, 1, 0, 0 },
    { 0, 0, 0, 0, 0, 1, 0, 0 },
    { 0, 0, 0, 0, 0, 1, 0, 0 },
    { 0, 0, 0, 0, 0, 1, 0, 0 },
    { 0, 0, 0, 0, 0, 0, 0, 0 }
  };

  unsigned char data_8[8][8] = {
    { 0, 0, 0, 0, 0, 0, 0, 0 },
    { 0, 0, 1, 1, 1, 1, 0, 0 },
    { 0, 0, 1, 0, 0, 1, 0, 0 },
    { 0, 0, 1, 0, 0, 1, 0, 0 },
    { 0, 0, 1, 1, 1, 1, 0, 0 },
    { 0, 0, 1, 0, 0, 1, 0, 0 },
    { 0, 0, 1, 0, 0, 1, 0, 0 },
    { 0, 0, 1, 1, 1, 1, 0, 0 }
  };

  unsigned char data_9[8][8] = {
    { 0, 0, 0, 0, 0, 0, 0, 0 },
    { 0, 0, 1, 1, 1, 1, 0, 0 },
    { 0, 0, 1, 0, 0, 1, 0, 0 },
    { 0, 0, 1, 0, 0, 1, 0, 0 },
    { 0, 0, 1, 1, 1, 1, 0, 0 },
    { 0, 0, 0, 0, 0, 1, 0, 0 },
    { 0, 0, 0, 0, 0, 1, 0, 0 },
    { 0, 0, 1, 1, 1, 1, 0, 0 }
  };

  unsigned char heart[8][8] = {
    { 0, 0, 0, 0, 0, 0, 0, 0 },
    { 0, 1, 1, 0, 0, 1, 1, 0 },
    { 1, 1, 1, 1, 1, 1, 1, 1 },
    { 1, 1, 1, 1, 1, 1, 1, 1 },
    { 0, 1, 1, 1, 1, 1, 1, 0 },
    { 0, 0, 1, 1, 1, 1, 0, 0 },
    { 0, 0, 0, 1, 1, 0, 0, 0 },
    { 0, 0, 0, 0, 0, 0, 0, 0 },
  };
  unsigned char smile[8][8] = {
    {0,0,0,0,0,0,0,0},
    {0,1,0,0,0,0,1,0},
    {1,0,1,0,0,1,0,1},
    {0,0,0,0,0,0,0,0},
    {0,0,0,0,0,0,0,0},
    {0,1,0,0,0,0,1,0},
    {0,0,1,1,1,1,0,0},
    {0,0,0,0,0,0,0,0},
  };

  unsigned char cry[8][8] = {
    {0,0,0,0,0,0,0,0},
    {0,1,0,0,0,0,1,0},
    {1,0,1,0,0,1,0,1},
    {0,0,0,0,0,0,0,0},
    {0,0,0,0,0,0,0,0},
    {0,0,1,1,1,1,0,0},
    {0,1,0,0,0,0,1,0},
    {0,0,0,0,0,0,0,0},
  };
};